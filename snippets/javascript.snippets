snippet cs
	var cx = React.addons.classSet;
snippet cdm
	componentDidMount() {
		${1}
	}
snippet cdup
	componentDidUpdate(prevProps, prevState) {
		${1}
	}
snippet cwm
	componentWillMount() {
		${1}
	}
snippet cwr
	componentWillReceiveProps(nextProps) {
		${1}
	}
snippet cwun
	componentWillUnmount() {
		${1}
	}
snippet cwu
	componentWillUpdate(nextProps, nextState) {
		${1}
	}
snippet cx
	cx({
		${1}: ${2}
	});
snippet fup
	forceUpdate(${1:callback});
snippet gdp
	getDefaultProps() {
		return {
			${1}
		};
	}
snippet gis
	getInitialState() {
		return {
			${1}: ${2}
		};
	}
snippet ism
	isMounted()
snippet jsx
	/**
	 * @jsx React.DOM
	 */
snippet pt
	propTypes: {
		${1}: PropTypes.${2:string}
	}

snippet cmp
	import React from 'react';
	import PropTypes from 'prop-types';

	class ${1:`Filename()`} extends React.Component {

	  render() {
	    return (
	      <div>${2}</div>
	    );
	  }
	}

	$1.propTypes = {

	};
	export default $1;

snippet pc
	import  React, { PureComponent } from 'react';
	import PropTypes from 'prop-types';

	class ${1:`Filename()`} extends PureComponent {

	  render() {
	    return (
	      <div>${2}</div>
	    );
	  }
	}

	$1.propTypes = {

	};
	export default $1;

snippet fc
	import React from 'react';

	export default (props) => {
	    return (
	      <div>${1}</div>
	    );
	};

snippet ren
	render() {
		return (
			${1:<div />}
		);
	}
snippet sst
	setState({
		${1}: ${2}
	});
snippet scu
	shouldComponentUpdate(nextProps, nextState) {
		${1}
	}
snippet props
	this.props.${1}
snippet state
	this.state.${1}
snippet trp
	transferPropsTo(${1});
